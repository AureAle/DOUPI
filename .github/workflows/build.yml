# This is a basic workflow to help you get started with Actions

name: Build and push the image

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    strategy:
      matrix:
        url:
          [
            "src/adservice",
            "src/cartservice/src",
            "src/checkoutservice",
            "src/currencyservice",
            "src/emailservice",
            "src/frontend",
            "src/loadgenerator",
            "src/paymentservice",
            "src/productcatalogservice",
            "src/recommendationservice",
            "src/shippingservice",
          ]
        name:
          [
            "adservice",
            "cartservice",
            "checkoutservice",
            "currencyservice",
            "emailservice",
            "frontend",
            "loadgenerator",
            "paymentservice",
            "productcatalogservice",
            "recommendationservice",
            "shippingservice",
          ]
    steps:
      # Checks-out your repository, Clones the repository into the job environment
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v2

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - run: |
          docker build ${{ matrix.url }} -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/samples/${{ matrix.name }}:latest
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/samples/${{ matrix.name }}:latest
